name: Solution Deploy

on: workflow_dispatch

jobs:
  iot_connect:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Setup python environment
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        working-directory: ./iot-connect
        run: pip install -r requirements.txt

      - name: Setup IoTConnect
        working-directory: ./iot-connect
        env:
          USERNAME: ${{ secrets.IOT_CONNECT_USERNAME }}
          PASSWORD: ${{ secrets.IOT_CONNECT_PASSWORD }}
          SOLUTION_KEY: ${{ secrets.IOT_CONNECT_SOLUTION_KEY }}
        run: python ./iot_connect_setup.py "$USERNAME" "$PASSWORD" "$SOLUTION_KEY"

  aws_cdk:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: "npm"
          cache-dependency-path: './demo-cdk/package-lock.json'

      - name: Install dependencies
        working-directory: ./demo-cdk
        run: npm install

      - name: Install AWS CDK
        working-directory: ./demo-cdk
        run: npm i -g aws-cdk

      - name: Configure aws credentials
        uses: aws-actions/configure-aws-credentials@master
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Synth stack
        working-directory: ./demo-cdk
        run: cdk synth

      - name: Deploy stack
        working-directory: ./demo-cdk
        run: cdk deploy --verbose --all --require-approval never
