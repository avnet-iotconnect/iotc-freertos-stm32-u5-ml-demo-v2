name: Test Build Firmware and create OTA Update

on: workflow_dispatch

jobs:
  test_fw_build:
    runs-on: codebuild-AvnetStm32FWBuild-${{ github.run_id }}-${{ github.run_attempt }}
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Setup tools
        run: ./scripts/setup-project.sh

      - name: Build Firmware
        working-directory: ./stm32
        run: |
          /opt/st/stm32cubeide_1.12.1/headless-build.sh -data . -import Projects/b_u585i_iot02a_ntz -build b_u585i_iot02a_ntz
          ls Projects/b_u585i_iot02a_ntz/Debug/
          mkdir ../iot-connect/ota
          cp Projects/b_u585i_iot02a_ntz/Debug/b_u585i_iot02a_ntz.bin ../iot-connect/ota/fw.iso

      - name: Artifacts upload
        uses: actions/upload-artifact@v4
        with:
          name: debug
          path: stm32/Projects/b_u585i_iot02a_ntz/Debug
          retention-days: 1

      - name: Setup python environment
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        working-directory: ./iot-connect
        run: pip install -r requirements.txt

      - name: Create OTA update
        working-directory: ./iot-connect
        env:
          USERNAME: ${{ secrets.IOT_CONNECT_USERNAME }}
          PASSWORD: ${{ secrets.IOT_CONNECT_PASSWORD }}
          SOLUTION_KEY: ${{ secrets.IOT_CONNECT_SOLUTION_KEY }}
          ENTITY_NAME: ${{ secrets.IOT_CONNECT_ENTITY_NAME }}
        run: python ./iot_connect_fw_ota.py "$USERNAME" "$PASSWORD" "$SOLUTION_KEY" "$ENTITY_NAME"
